class Solution(object):
    def productQueries(self, n, queries):
        """
        :type n: int
        :type queries: List[List[int]]
        :rtype: List[int]
        """
        MOD = 10**9 + 7
        
        powers = []
        bit_position = 0
        while n:
            if n & 1:
                powers.append(pow(2, bit_position, MOD))
            bit_position += 1
            n >>= 1
        
        prefix = [0] * len(powers)
        prefix[0] = powers[0]
        for i in range(1, len(powers)):
            prefix[i] = (prefix[i-1] * powers[i]) % MOD
        
        ans = []
        for l, r in queries:
            if l == 0:
                ans.append(prefix[r])
            else:
                inv = pow(prefix[l-1], MOD-2, MOD)  
                ans.append((prefix[r] * inv) % MOD)
        
        return ans
